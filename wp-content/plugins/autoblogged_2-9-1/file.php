<?php


class Log_file extends Log { var $_filename = 'php.log'; var $_fp = false; var $_append = true; var $_locking = false; var $_mode = 0644; var $_dirmode = 0755; var $_lineFormat = '%1$s %2$s [%3$s] %4$s'; var $_timeFormat = '%b %d %H:%M:%S'; var $_eol = "\n"; function Log_file($name, $ident = '', $conf = array(), $level = PEAR_LOG_DEBUG) { $this->_id = md5(microtime()); $this->_filename = $name; $this->_ident = $ident; $this->_mask = Log::UPTO($level); if (isset($conf['append'])) { $this->_append = $conf['append']; } if (isset($conf['locking'])) { $this->_locking = $conf['locking']; } if (!empty($conf['mode'])) { if (is_string($conf['mode'])) { $this->_mode = octdec($conf['mode']); } else { $this->_mode = $conf['mode']; } } if (!empty($conf['dirmode'])) { if (is_string($conf['dirmode'])) { $this->_dirmode = octdec($conf['dirmode']); } else { $this->_dirmode = $conf['dirmode']; } } if (!empty($conf['lineFormat'])) { $this->_lineFormat = str_replace(array_keys($this->_formatMap), array_values($this->_formatMap), $conf['lineFormat']); } if (!empty($conf['timeFormat'])) { $this->_timeFormat = $conf['timeFormat']; } if (!empty($conf['eol'])) { $this->_eol = $conf['eol']; } else { $this->_eol = (strstr(PHP_OS, 'WIN')) ? "\r\n" : "\n"; } register_shutdown_function(array(&$this, '_Log_file')); } function _Log_file() { if ($this->_opened) { $this->close(); } } function _mkpath($path, $mode = 0700) { $head = dirname($path); $tail = basename($path);
	if (empty($tail)) { $head = dirname($path); $tail = basename($path); } if (!empty($head) && !empty($tail) && !is_dir($head)) { $this->_mkpath($head, $mode); } return @mkdir($head, $mode); } function open() { if (!$this->_opened) { if (!is_dir(dirname($this->_filename))) { $this->_mkpath($this->_filename, $this->_dirmode); } $creating = !file_exists($this->_filename); $this->_fp = fopen($this->_filename, ($this->_append) ? 'a' : 'w'); $this->_opened = ($this->_fp !== false); if ($creating && $this->_opened) { chmod($this->_filename, $this->_mode); } } return $this->_opened; } function close() { if ($this->_opened && fclose($this->_fp)) { $this->_opened = false; } return ($this->_opened === false); } function flush() { if (is_resource($this->_fp)) { return fflush($this->_fp); } return false; } function log($message, $priority = null) { if ($priority === null) { $priority = $this->_priority; } if (!$this->_isMasked($priority)) { return false; } if (!$this->_opened && !$this->open()) { return false; } $message = $this->_extractMessage($message); $line = $this->_format($this->_lineFormat, strftime($this->_timeFormat), $priority, $message) . $this->_eol; if ($this->_locking) { flock($this->_fp, LOCK_EX); } $success = (fwrite($this->_fp, $line) !== false); if ($this->_locking) { flock($this->_fp, LOCK_UN); } $this->_announce(array('priority' => $priority, 'message' => $message)); return $success; } }
